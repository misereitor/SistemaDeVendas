// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemaDeVendas.Data;

#nullable disable

namespace SistemaDeVendas.Migrations
{
    [DbContext(typeof(ConexaoDBContext))]
    [Migration("20230608192346_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmpresaModelUsuarioModel", b =>
                {
                    b.Property<int>("EmpresasId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("integer");

                    b.HasKey("EmpresasId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("EmpresaUsuario", (string)null);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaDeAtuacao")
                        .HasColumnType("integer");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Logo")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Telefone")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.EmpresaModels.ParametrosdeVendasModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("BloqProducaoEstoqueNegativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("BloqVendaEstoqueNegativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CadastroDeProdutoViaPedidoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CadastroDeProdutoViaPedidoVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("CupomTroca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("FechamentoCegoPDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<float>("LimiteDeCreditoNovosCliente")
                        .HasColumnType("real");

                    b.Property<float>("LimiteNumerarioCaixa")
                        .HasColumnType("real");

                    b.Property<float>("MaxDescontoPOS")
                        .HasColumnType("real");

                    b.Property<float>("MaxDescontoPedido")
                        .HasColumnType("real");

                    b.Property<bool>("MovimentacaoEstoqViaXML")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("PrasoCupomTroca")
                        .HasColumnType("integer");

                    b.Property<int>("TipoImpressao")
                        .HasColumnType("integer");

                    b.Property<bool>("UtilizarLimiteCredito")
                        .HasColumnType("boolean");

                    b.Property<int>("ValidadeEntregaDeOrcamentoVenda")
                        .HasColumnType("integer");

                    b.Property<int>("ValidadeEntregaDePedidoVenda")
                        .HasColumnType("integer");

                    b.Property<int>("ValidadeEntregaPedidoCompra")
                        .HasColumnType("integer");

                    b.Property<int>("ValidadeEntregaorcamentoCompra")
                        .HasColumnType("integer");

                    b.Property<int>("ValidadeOrcamentoCompra")
                        .HasColumnType("integer");

                    b.Property<int>("ValidadeOrcamentoVenda")
                        .HasColumnType("integer");

                    b.Property<int>("ValorizacaoEstoque")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("parametrosdevendas", (string)null);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.GeralModel.EnderecoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Cidade");

                    b.Property<int?>("EmpresaModel_EnderecoCorrespondenciaId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmpresaModel_EnderecoEntregaId")
                        .HasColumnType("integer");

                    b.Property<int?>("EmpresaModel_EnderecoFaturamentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Estado");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Rua");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaModel_EnderecoCorrespondenciaId");

                    b.HasIndex("EmpresaModel_EnderecoEntregaId");

                    b.HasIndex("EmpresaModel_EnderecoFaturamentoId");

                    b.ToTable("endereco");
                });

            modelBuilder.Entity("SistemaDeVendas.Models.GeralModels.DadosBancariosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Agencia")
                        .HasColumnType("numeric")
                        .HasColumnName("agencia");

                    b.Property<int>("Bancos")
                        .HasColumnType("integer")
                        .HasColumnName("bancos");

                    b.Property<decimal>("Conta")
                        .HasColumnType("numeric")
                        .HasColumnName("conta");

                    b.Property<decimal>("DigitoAgencia")
                        .HasColumnType("numeric")
                        .HasColumnName("digito_agencia");

                    b.Property<decimal>("DigitoConta")
                        .HasColumnType("numeric")
                        .HasColumnName("digito_conta");

                    b.Property<int?>("UsuarioModel_DadosBancariosId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioModel_DadosBancariosId");

                    b.ToTable("dados_bancarios", (string)null);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.UsuariosModels.DocumentoUsuariosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("FotoDocumento")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioModel_DocumentosId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioModel_DocumentosId");

                    b.ToTable("DocumentoUsuariosModel");
                });

            modelBuilder.Entity("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ADMPDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<decimal>("CNPJ")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CPF")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Celular")
                        .HasColumnType("numeric");

                    b.Property<float>("Comissao")
                        .HasColumnType("real");

                    b.Property<bool>("Comprador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int?>("EnderecoId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<byte[]>("Foto")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<bool>("Master")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("OperadorPDV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<decimal>("RG")
                        .HasColumnType("numeric");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<int>("Sexo")
                        .HasColumnType("integer");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Telefone")
                        .HasColumnType("numeric");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<bool>("Vendedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("EmpresaModelUsuarioModel", b =>
                {
                    b.HasOne("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", null)
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaDeVendas.Models.EmpresaModels.ParametrosdeVendasModel", b =>
                {
                    b.HasOne("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", null)
                        .WithOne("ParametroDeVenda")
                        .HasForeignKey("SistemaDeVendas.Models.EmpresaModels.ParametrosdeVendasModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaDeVendas.Models.GeralModel.EnderecoModel", b =>
                {
                    b.HasOne("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", null)
                        .WithMany("EnderecoCorrespondencia")
                        .HasForeignKey("EmpresaModel_EnderecoCorrespondenciaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", null)
                        .WithMany("EnderecoEntrega")
                        .HasForeignKey("EmpresaModel_EnderecoEntregaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", null)
                        .WithMany("EnderecoFaturamento")
                        .HasForeignKey("EmpresaModel_EnderecoFaturamentoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.GeralModels.DadosBancariosModel", b =>
                {
                    b.HasOne("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", null)
                        .WithMany("DadosBancarios")
                        .HasForeignKey("UsuarioModel_DadosBancariosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.UsuariosModels.DocumentoUsuariosModel", b =>
                {
                    b.HasOne("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", null)
                        .WithMany("Documentos")
                        .HasForeignKey("UsuarioModel_DocumentosId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", b =>
                {
                    b.HasOne("SistemaDeVendas.Models.GeralModel.EnderecoModel", "Endereco")
                        .WithOne()
                        .HasForeignKey("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("SistemaDeVendas.Models.EmpresaModels.EmpresaModel", b =>
                {
                    b.Navigation("EnderecoCorrespondencia");

                    b.Navigation("EnderecoEntrega");

                    b.Navigation("EnderecoFaturamento");

                    b.Navigation("ParametroDeVenda")
                        .IsRequired();
                });

            modelBuilder.Entity("SistemaDeVendas.Models.UsuariosModels.UsuarioModel", b =>
                {
                    b.Navigation("DadosBancarios");

                    b.Navigation("Documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
